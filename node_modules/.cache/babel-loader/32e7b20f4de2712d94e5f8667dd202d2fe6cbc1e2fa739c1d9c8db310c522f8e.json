{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejasri\\\\payroll_react\\\\payroll\\\\src\\\\Components\\\\Home\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetYourSalary() {\n  _s();\n  const [e_sal_emp_code, sete_sal_emp_code] = useState('');\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  const getEmployeeDetails = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/api/employee/${e_sal_emp_code}`);\n      setEmployeeDetails(response.data);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n  const downloadDetails = () => {\n    if (employeeDetails) {\n      const pdf = new jsPDF();\n\n      // Heading row centered\n      pdf.setFont('helvetica', 'bold');\n      pdf.setFontSize(16);\n      pdf.text('Salary Details', 20, 20);\n\n      // Content rows in a table format\n      pdf.setFontSize(14);\n\n      // Define table headers\n      const headers = ['Field', 'Value'];\n\n      // Create a table for headers with borders\n      pdf.autoTable({\n        startY: 35,\n        head: [headers],\n        theme: 'plain',\n        styles: {\n          cellPadding: 2,\n          fontSize: 12,\n          lineWidth: 0.1 // Add border\n        }\n      });\n\n      // Define table data\n      const tableData = [['Employee Name', employeeDetails[19]]\n      // ... (add other rows as needed)\n      ];\n\n      // Create a table for data with borders\n      pdf.autoTable({\n        startY: pdf.autoTable.previous.finalY + 5,\n        // Start after the header\n        body: tableData,\n        theme: 'plain',\n        styles: {\n          cellPadding: 2,\n          fontSize: 12,\n          lineWidth: 0.1 // Add border\n        }\n      });\n\n      // Save the PDF as a blob\n      const pdfBlob = pdf.output('blob');\n\n      // Create a download link\n      const downloadLink = document.createElement('a');\n      downloadLink.href = URL.createObjectURL(pdfBlob);\n      downloadLink.download = `salary_details_${e_sal_emp_code}.pdf`;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divinp\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Employee Code\",\n            id: \"tragss\",\n            value: e_sal_emp_code,\n            onChange: e => sete_sal_emp_code(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getEmployeeDetails,\n            children: \"Get Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), employeeDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"but\",\n            onClick: downloadDetails,\n            children: \"Download Details (PDF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(GetYourSalary, \"wD7WTt45ZDwHTwmquHUJWvodhvU=\");\n_c = GetYourSalary;\nexport default GetYourSalary;\nvar _c;\n$RefreshReg$(_c, \"GetYourSalary\");","map":{"version":3,"names":["React","useState","axios","jsPDF","jsxDEV","_jsxDEV","GetYourSalary","_s","e_sal_emp_code","sete_sal_emp_code","employeeDetails","setEmployeeDetails","getEmployeeDetails","response","get","data","error","console","downloadDetails","pdf","setFont","setFontSize","text","headers","autoTable","startY","head","theme","styles","cellPadding","fontSize","lineWidth","tableData","previous","finalY","body","pdfBlob","output","downloadLink","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tejasri/payroll_react/payroll/src/Components/Home/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport './Home.css';\r\n\r\nfunction GetYourSalary() {\r\n    const [e_sal_emp_code, sete_sal_emp_code] = useState('');\r\n    const [employeeDetails, setEmployeeDetails] = useState(null);\r\n\r\n    const getEmployeeDetails = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:3001/api/employee/${e_sal_emp_code}`);\r\n            setEmployeeDetails(response.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            // Handle error\r\n        }\r\n    };\r\n\r\n    const downloadDetails = () => {\r\n        if (employeeDetails) {\r\n            const pdf = new jsPDF();\r\n\r\n            // Heading row centered\r\n            pdf.setFont('helvetica', 'bold');\r\n            pdf.setFontSize(16);\r\n            pdf.text('Salary Details', 20, 20);\r\n\r\n            // Content rows in a table format\r\n            pdf.setFontSize(14);\r\n\r\n            // Define table headers\r\n            const headers = ['Field', 'Value'];\r\n\r\n            // Create a table for headers with borders\r\n            pdf.autoTable({\r\n                startY: 35,\r\n                head: [headers],\r\n                theme: 'plain',\r\n                styles: {\r\n                    cellPadding: 2,\r\n                    fontSize: 12,\r\n                    lineWidth: 0.1, // Add border\r\n                },\r\n            });\r\n\r\n            // Define table data\r\n            const tableData = [\r\n                ['Employee Name', employeeDetails[19]],\r\n                // ... (add other rows as needed)\r\n            ];\r\n\r\n            // Create a table for data with borders\r\n            pdf.autoTable({\r\n                startY: pdf.autoTable.previous.finalY + 5, // Start after the header\r\n                body: tableData,\r\n                theme: 'plain',\r\n                styles: {\r\n                    cellPadding: 2,\r\n                    fontSize: 12,\r\n                    lineWidth: 0.1, // Add border\r\n                },\r\n            });\r\n\r\n            // Save the PDF as a blob\r\n            const pdfBlob = pdf.output('blob');\r\n\r\n            // Create a download link\r\n            const downloadLink = document.createElement('a');\r\n            downloadLink.href = URL.createObjectURL(pdfBlob);\r\n            downloadLink.download = `salary_details_${e_sal_emp_code}.pdf`;\r\n            document.body.appendChild(downloadLink);\r\n            downloadLink.click();\r\n            document.body.removeChild(downloadLink);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"sal\">\r\n                <div className=\"inp\">\r\n                    <br />\r\n                    <div className=\"divinp\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Employee Code\"\r\n                            id=\"tragss\"\r\n                            value={e_sal_emp_code}\r\n                            onChange={(e) => sete_sal_emp_code(e.target.value)}\r\n                        />\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <button onClick={getEmployeeDetails}>Get Details</button>\r\n                    </div>\r\n\r\n                    <br />\r\n                    {employeeDetails && (\r\n                        <div>\r\n                            {/* Display employee details here */}\r\n\r\n                            <button id=\"but\" onClick={downloadDetails}>Download Details (PDF)</button>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetYourSalary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}